/** cruds
==destroy
== create
== update
/** run controller with all function => (resource controller=> build up all cruds function)
==> and use model
php artisan make:controller TrackController --model=Track


/** component => code => can resuse in any way



task => cruds => tracks
== component
== students -> image ,track-> logo

===============================================
Day4
==
seeder => class
seeding data =>  (fake data) => testing on code
seeder (store),

 factory (create data) => database => blue print
 php artisan make:factory TrackFactory
  php artisan make:factory TrackFactory --model=Track


  // run to seed data
  php artisan db:seed --class=TrackSeeder

// pagination =>


// generate all model , seeder ,factory ,controller
php artisan make:model nameofmodel  -mfsc
php artisan make:model nameofmodel  -all


=== validation of data
https://laravel.com/docs/11.x/validation#main-content



/** course
courses
== tracks handle edit and delete for image
=> id , name ,
totalGrade,description => seeder , factory , migration ,
 controller=> validation on data
and handle error message



=======================
last day
==> realtion
// relation between two tables
== unary relation  (table and it self) ,
binary relation (relation between two tables) ,
 ternary relation (relation between more than 2 tables)

// one to one
 , one to many , many to many

 === students , tracks   (one to many)
 =>only one student can apply in one track
 === > track has many students

 (
    track_id=> student
 student_id=>track
 )

== relation in laravel => database => 1- migration , model

==> migration => coulmns =>foreign key

php artisan make:migration add_track_id_to_students_table







== api => resource

// api => application program interface
==> fluter (mobile devloper) =>data
== > api => return data not view
==> blade => view

== fullstack => blade with database
==> backend frame work => select data

// before version 11 => api => routes=> api code
-- in version 11 =>  if you want to use api => install api


===> php artisan install:api

// route of api
http://127.0.0.1:8000/api/url

== logic (controller), route(routes/api)

create cotroller to deal with api

php artisan make:controller Api/StudentController --api


// handle routes using postman
https://www.postman.com/downloads/


// using api not blade
// handle validation of all inputs// validator
// task => reSource => what is it => and use it in code
// create studentResource => php artisan make:resource StudentResource
handle code of tracks => track all student name in it
== update on student to show track name
== courses => relation between courses , student , track => and write all code of it
